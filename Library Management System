import datetime
import os


# os.getcwd()

# def LMS(param, param1):
#     pass
# from adodbapi.setup import line


class LMS:
    """ This class is used to keep record of books in the library. It has total four module:
    "Display Books","Issue Books","Return Books","Add Books" """

    def __init__(self, list_of_books, library_name):
        self.list_of_books = "List_of_books.txt"
        self.library_name = library_name
        self.books_dict = {}
        Id = 101
        with open(self.list_of_books) as bk:
            content = bk.readlines()
        for line in content:
            # print(line)
            self.books_dict.update({str(Id):{"books_title":line.replace("\n",""),"lender_name":""
                                             ,"Issue_date":"","Status":"Available"}})
            Id = Id + 1

    def display_books(self):
        print("-----------------List of Books---------------------------")
        print("Books_Id","\t","Title")
        print("----------------------------------------------------------")
        for key, value in self.books_dict.items():
            print(key,"\t\t",value.get("books_title"),"- [",value.get("Status"),"]")

    def Issue_books(self):
        books_id = input("Enter book id:")
        current_date = datetime.datetime.now().strftime("%d-%m-%y %H:%M:%S")
        if books_id in self.books_dict.keys():
            if not self.books_dict[books_id]['Status'] == "Available":
                print(f"this book is already issued to {self.books_dict[books_id]['lender_name' ]} \
                on {self.books_dict[books_id]['Issue_date']}")
                return self.Issue_books()
            elif self.books_dict[books_id]['Status'] == "Available":
                your_name = input("Enter Your Name:")
                self.books_dict[books_id]['lender_name'] = your_name
                self.books_dict[books_id]['Issue_date'] = current_date
                self.books_dict[books_id]['Status'] = "Already Issued"
                print("Books Issued Successfully!!! \n")
        else:
            print("Wrong Shot!! Book ID is not found!!")
            return self.Issue_books()

# Adding a book

    def add_books(self, Id=None):
        new_books = input("Enter Book Title")
        if new_books == "":
            return self.add_books
        elif len(new_books) > 25 :
            print("Book Title is too Long!! Can't be included")
            return self.add_books
        else:
            with open(self.list_of_books, "a") as bk:
                bk.writelines(f"{new_books}\n")
                self.books_dict.update(int(max(self.books_dict))+1)
                self.books_dict.update({"books_title":new_books, "lender_name":"","Issue_date":"","Status":"Available" })
                print(f"This books {new_books} has been added successfully!!")
                # self.books_dict.update({str(Id): {"books_title": line.replace("\n", ""), "lender_name": ""
                #     , "Issue_date": "", "Status": "Available"}})

# Return the book
    def return_books(self):
        books_id = input("Enter Book Id")
        if books_id in self.books_dict.keys():
            if self.books_dict[books_id]["Status"] == "Available":
                print("This Book is already available in the library. Check Your Book Id once")
                return self.return_books()
            elif not self.books_dict[books_id]["Status"] == "Available":
                self.books_dict[books_id]["lender_name"] = ""
                self.books_dict[books_id]["Issue_date"] = ""
                self.books_dict[books_id]["Status"] = "Available"
                print("Successfully Updated!!! \n")
        else:
            print("Book Id is not found")

try:
    myLMS = LMS("list_of_books.txt","Python's Library")
    press_key_list = {"D":"Display Books", "I":"Issue Books","A":"Add Books","R":"Return Books","Q":"Quit"}
    key_press =False
    while not (key_press== "q"):
        print(f'\n----------Welcome to {myLMS.library_name} Library Management System-----------\n')
        for key, value in press_key_list.items():
            print("Press", key, "To", value)
            key_press = input("Press Key: ").lower()
            if key_press == "i":
                print("\nCurrent Selection : Issue Books\n")
                myLMS.Issue_books()
            elif key_press == "a":
                print("\nCurrent Selection : Add Books\n")
                myLMS.add_books()
            elif key_press == "d":
                print("\nCurrent Selection : Display Books\n")
                myLMS.display_books()
            elif key_press == "r":
                print("\nCurrent Selection : Return Books\n")
                myLMS.return_books()
            elif key_press == "q":
                break
            else:
                continue
except Exception as e:
    print("Oops!! Something Went Wrong!!")






l = LMS("List_of_books.txt","Python's Library")
print(l.display_books())



